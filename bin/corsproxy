#!/usr/bin/env node

var Hapi = require('hapi')
var plugin = require('../index')
var good = require('good')
var loggerOptions = require('../lib/logger-options')

var server = new Hapi.Server({})
var port = parseInt(process.env.CORSPROXY_PORT || process.env.PORT || 1337, 10)

server.connection({
  port: port
})

// cors plugin
server.register(plugin, function (error) {
  if (error) server.log('error', error)
})

// logger plugin
server.register({
  register: good,
  options: loggerOptions
}, function (error) {
  if (error) server.log('error', error)
})

// proxy route
server.route({
  method: '*',
  path: '/{host}/{path*}',
  handler: {
    proxy: {
      passThrough: true,
      mapUri: function(request, callback) {
         var protocol = "http";
         if (request.params.host.indexOf(":443") !== -1){
             protocol = "https";
             request.host = request.params.host.split(":443").join("");
         } else {
             request.host = request.params.host;
        }
        request.path = request.path.substr(request.params.host.length + 1)
        request.headers['host'] = request.host;

        var query = request.url.search ? request.url.search : '';
        console.log('proxy to '+protocol+'://' + request.host + request.path)
        callback(null, protocol + '://' + request.host + request.path + query, request.headers);
      }
    }
  }
})

// default route
server.route({
  method: 'GET',
  path: '/',
  handler: {
    file: 'public/index.html'
  }
})


server.start(function (error) {
  if (error) server.log('error', error)

  server.log('info', 'CORS Proxy running at:' + server.info.uri)
})
